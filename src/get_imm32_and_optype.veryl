import util::Optype;
pub module get_imm32_and_optype (
    i_insn  : input  logic <32>,
    o_optype: output Optype    ,
    o_imm   : output logic <32>,
) {
    always_comb {
        o_optype = case i_insn[6:0] { // instrcution[6:0] is opcode
            7'b110_1111: Optype::J,
            7'b110_0011: Optype::B,
            7'b010_0011: Optype::S,
            7'b011_0011: Optype::R,
            7'b011_0111: Optype::U,
            7'b001_0111: Optype::U,
            default    : Optype::I,
        };
    }

    always_comb {
        o_imm = case o_optype {
            Optype::I: {i_insn[31] repeat 20, i_insn[31:20]}, // cast to 32 bits
            Optype::S: {i_insn[31] repeat 20, i_insn[31:25], i_insn[11:7]},
            Optype::U: {i_insn[31:12], 12'b0},
            Optype::J: {i_insn[31] repeat 11, i_insn[31], i_insn[19:12], i_insn[20], i_insn[30:21], 1'b0},
            Optype::B: {i_insn[31] repeat 19, i_insn[31], i_insn[7], i_insn[30:25], i_insn[11:8], 1'b0},
            default  : 32'b0, // R type doesn't have immediate
        };
    }

}
